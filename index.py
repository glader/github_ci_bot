import telegram
import os
import json


def handler(event, context):
    payload = json.loads(event["body"])

    token = os.environ["BOT_TOKEN"]
    chat_id = os.environ["CHAT_ID"]

    bot = telegram.Bot(token=token)

    if "issue" in payload and "comment" in payload and payload['action'] == "created":
        text = (
            f"üó£ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{ payload['comment']['user']['login'] } " 
            f"–≤ [{ payload['issue']['title'] }]({ payload['issue']['html_url'] }) "
            f"- { payload['comment']['body'] }"
        )

    elif "issue" in payload and payload['action'] == "opened":
        text = (
            f"üëæ –ó–∞–¥–∞—á –ø—Ä–∏–≤–∞–ª–∏–ª–æ: [{ payload['issue']['title'] }]({ payload['issue']['html_url'] }) "
            f"–æ—Ç @{ payload['issue']['user']['login'] }"
        )

    elif "issue" in payload and payload['action'] == "reopened":
        text = (
            f"‚ôªÔ∏è –ß—Ç–æ-—Ç–æ –Ω–µ –¥–æ–¥–µ–ª–∞–ª–∏ –≤ –∑–∞–¥–∞—á–µ, —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç–∞: "
            f"[{ payload['issue']['title'] }]({ payload['issue']['html_url'] })"
        )

    elif "pull_request" in payload and payload['action'] in ("opened", "reopened"):
        text = (
            f"üõ† @{ payload['pull_request']['user']['login'] } –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–≤—ã–π PR: "
            f"[{ payload['pull_request']['title'] }]({ payload['pull_request']['html_url'] })"
        )

    elif "pull_request" in payload and payload['action'] == "ready_for_review":
        text = (
            f"‚úÖ PR [{ payload['pull_request']['title'] }]({ payload['pull_request']['html_url'] }) –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É"
        )

    elif "pull_request" in payload and payload['action'] == "review_requested":
        text = (
            f"‚ùóÔ∏è–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≤—å—é –¥–ª—è PR: [{ payload['pull_request']['title'] }]({ payload['pull_request']['html_url'] })"
        )

    elif "pusher" in payload and payload['ref'] == "refs/heads/master" and payload['repository']['owner']['login'] == 'vas3k':
        text = (
            "üíö –ü—É—à –≤ –º–∞—Å—Ç–µ—Ä –æ—Ç { payload['head_commit']['author']['username'] }: [{ payload['head_commit']['message'] }]({ payload['head_commit']['url'] })"
        )

    elif "discussion" in payload and "comment" in payload:
        text = (
            f"üó£ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{ payload['comment']['user']['login'] } " 
            f"–≤ [{ payload['discussion']['title'] }]({ payload['comment']['html_url'] }) "
            f"- { payload['comment']['body'] }"
        )

    elif "discussion" in payload and payload['action'] == "created":
        text = (
            f"üôã @{ payload['sender']['login'] } —Ö–æ—á–µ—Ç –æ–±—Å—É–¥–∏—Ç—å " 
            f"[{ payload['discussion']['title'] }]({ payload['discussion']['html_url'] }) "
        )

    else:
        print(str(payload.keys()) + " : " + str(payload["action"]))

    if text:
        bot.sendMessage(
            chat_id=chat_id,
            text=text,
            parse_mode='markdown',
            disable_web_page_preview=True,
        )

    return {
        'statusCode': 200,
        'body': json.dumps({
            'status': 'ok',
        }),
    }
